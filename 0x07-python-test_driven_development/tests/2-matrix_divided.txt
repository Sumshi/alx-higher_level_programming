The ``divide matrix`` module
======================

Using ``div``
-------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


"""Dividing matrix with integer"""
>>> matrix_divided([[3.4, 5.2], [2.4, 7.4]], 3)
[[1.13, 1.73], [0.8, 2.47]]

"""Dividing matrix with float"""
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

"""Dividing matrix with negative value"""
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

"""Divide float matrix with float value"""
>>> matrix_divided([[3.4, 5.2], [2.4, 7.4]], 1.2)
[[2.83, 4.33], [2.0, 6.17]]

"""Divide float matrix with int value"""
>>> matrix_divided([[2.4, 1.3], [1.8, 6.3]], 2)
[[1.2, 0.65], [0.9, 3.15]]

"""ERRORS"""

"""dividing with a non integer, a string"""
>>> matrix_divided([["mango", "eggs"], [5, 9]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Matrix must be of the same size"""
>>> matrix_divided([[1, 2, 3], [7, 9]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([[1, 2, 3], [7, 9, 8]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero


"""Dividing matrix by string"""
>>> matrix_divided([[1, 2, 3], [7, 9, 8]], "john")
Traceback (most recent call last):
...
TypeError: div must be a number


"""when one parameter is passes"""
>>> matrix_divided([[1, 2, 3], [7, 9, 8]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


"""when one parameter is passes"""
>>> matrix_divided(3)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

"""when both matrix and div are missing"""
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
